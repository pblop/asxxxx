ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 1
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
HILO Ordering

                              1 	.sbttl	HILO Ordering
                              2 
                              3 	.hilo				; HILO Ordering
                              4 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 2
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
16-Bit Addressing

                              1 	.sbttl	16-Bit Addressing
                              2 
                              3 	.16bit				; 16-bit addressing
                              4 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 3
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
16-Bit Addressing

                              1 	.title	Machine Independent Assembler Test
                              2 	.module Asmtst
                              3 
                              4 	;  The file 'asmt2blo.asm' must be assembled with
                              5 	; a LO/HI assembler (in file ___ext.c, hilo = 0).
                              6 	;
                              7 	;  The file 'asmt2bhi.asm' must be assembled with
                              8 	; a HI/LO assembler (in file ___ext.c, hilo = 1).
                              9 	;
                             10 	;	asmt:
                             11 	;		2	2-byte PC addressing
                             12 	;		b	1 byte data addressing
                             13 	;		lo	LO/HI assembler
                             14 	;		hi	HI/LO assembler
                             15 	;
                             16 	; All .areas must be of type DSEG.
                             17 
                             18 	.sbttl	Memory Allocation Directives
                             19 
                             20 	.area	_DATA	(abs,ovr)	; Data Area
                             21 
                             22 	.radix	O			; set default to octal
                             23 
                             24 					; binary constants
   0000 C0                   25 	.byte	0b11000000		; C0
   0001 0E                   26 	.byte	0B1110			; 0E
   0002 C0                   27 	.byte	$%11000000		; C0
                             28 
                             29 					; octal constants
   0003 14                   30 	.byte	24			; 14
   0004 14                   31 	.byte	024			; 14
   0005 14                   32 	.byte	0q024			; 14
   0006 14                   33 	.byte	0Q024			; 14
   0007 14                   34 	.byte	0o024			; 14
   0008 14                   35 	.byte	0O024			; 14
   0009 14                   36 	.byte	$&24			; 14
                             37 
                             38 					; decimal constant
   000A 18                   39 	.byte	0d024			; 18
   000B 18                   40 	.byte	0D024			; 18
   000C 18                   41 	.byte	$#24			; 18
                             42 
                             43 					; hexidecimal constants
   000D 24                   44 	.byte	0h024			; 24
   000E 24                   45 	.byte	0H024			; 24
   000F 24                   46 	.byte	0x024			; 24
   0010 24                   47 	.byte	0X024			; 24
   0011 24                   48 	.byte	$@24			; 24
                             49 
   0012 00                   50 	.db	0			; 00
   0013 00 00                51 	.dw	0			; 00 00
                             52 
                             53 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 4
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Memory Allocation Directives

                             55 	.radix	D			; set default to decimal
                             56 
   0015 01 02 03             57 	.byte	1,2,3			; 01 02 03
   0018 04 05 06             58 	.byte	4,5,6			; 04 05 06
   001B 07 08 09             59 	.byte	7,8,9			; 07 08 09
   001E 00 01 00 02 00 03    60 	.word	1,2,3			; 00 01 00 02 00 03
   0024 00 04 00 05 00 06    61 	.word	4,5,6			; 00 04 00 05 00 06
   002A 00 07 00 08 00 09    62 	.word	7,8,9			; 00 07 00 08 00 09
                             63 
   0030                      64 	.blkb	16
   0040                      65 	.ds	16
                             66 
   0050                      67 	.blkw	16
   0070                      68 	.ds	16*2
                             69 
   0090s00r92                70 word:	.word	.+2			;s00r92
   0092s00r90                71 	.word	.-2			;s00r90
   0094s00r96                72 	.word	2+.			;s00r96
   0096 00 04                73 	.word	.-(word+2)		; 00 04
                             74 
                             75 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 5
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Boundary Directives

                             77 	.sbttl	Boundary Directives
                             78 
                             79 	.area	bndry_1	(ABS,OVR,DSEG)
   0000                      80 	.org	0
   0000                      81 bndry_1:
                             82 
   0000                      83 	.even
   0000 00                   84 1$:	.byte	1$ - bndry_1		; 00
   0002                      85 	.even
   0002 02                   86 2$:	.byte	2$ - bndry_1		; 02
   0004                      87 	.even
   0005                      88 	.odd
   0005 05                   89 3$:	.byte	3$ - bndry_1		; 05
   0007                      90 	.odd
   0007 07                   91 4$:	.byte	4$ - bndry_1		; 07
   0009                      92 	.odd
   000A                      93 	.even
   000A 00 0A                94 5$:	.word	5$ - bndry_1		; 00 0A
   000D                      95 	.odd
   000D 00 0D                96 6$:	.word	6$ - bndry_1		; 00 0D
   0010                      97 	.even
   0010 00 10                98 7$:	.word	7$ - bndry_1		; 00 10
                             99 
                            100 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 6
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Power of 2 Boundary Modes

                            102 	.sbttl	Power of 2 Boundary Modes
                            103 
                            104 	.area	bndry_2	(ABS,OVR,DSEG)
   0000                     105 	.org	0
                            106 
   0000                     107 	.even			; Address == 0
   0000                     108 	.bndry	2		; Address == 0
   0000                     109 	.bndry	4		; Address == 0
   0000                     110 	.bndry	8		; Address == 0
   0000                     111 	.bndry	16		; Address == 0
   0000                     112 	.bndry	32		; Address == 0
   0000                     113 	.bndry	64		; Address == 0
   0000                     114 	.bndry	128		; Address == 0
   0000                     115 	.bndry	256		; Address == 0
   0000                     116 	.bndry	512		; Address == 0
   0000                     117 	.bndry	1024		; Address == 0
                            118 
   0000                     119 	.org	0
   0000                     120 bndry_2:
                            121 
   0000                     122 	.org	0
   0000                     123 	.even			; Address == 0
   0000 00 00               124 1$:	.word	1$ - bndry_2	; 00 00
                            125 
   0000                     126 	.org	0
   0000                     127 	.bndry	2		; Address == 0
   0000 00 00               128 2$:	.word	2$ - bndry_2	; 00 00
                            129 
   0000                     130 	.org	0
   0000                     131 	.bndry	4		; Address == 0
   0000 00 00               132 3$:	.word	3$ - bndry_2	; 00 00
                            133 
   0000                     134 	.org	0
   0000                     135 	.bndry	8		; Address == 0
   0000 00 00               136 4$:	.word	4$ - bndry_2	; 00 00
                            137 
   0000                     138 	.org	0
   0000                     139 	.bndry	16		; Address == 0
   0000 00 00               140 5$:	.word	5$ - bndry_2	; 00 00
                            141 
   0000                     142 	.org	0
   0000                     143 	.bndry	32		; Address == 0
   0000 00 00               144 6$:	.word	6$ - bndry_2	; 00 00
                            145 
   0000                     146 	.org	0
   0000                     147 	.bndry	64		; Address == 0
   0000 00 00               148 7$:	.word	7$ - bndry_2	; 00 00
                            149 
   0000                     150 	.org	0
   0000                     151 	.bndry	128		; Address == 0
   0000 00 00               152 8$:	.word	8$ - bndry_2	; 00 00
                            153 
   0000                     154 	.org	0
   0000                     155 	.bndry	256		; Address == 0
   0000 00 00               156 9$:	.word	9$ - bndry_2	; 00 00
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 7
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Power of 2 Boundary Modes

                            157 
   0000                     158 	.org	0
   0000                     159 	.bndry	512		; Address == 0
   0000 00 00               160 10$:	.word	10$ - bndry_2	; 00 00
                            161 
   0000                     162 	.org	0
   0000                     163 	.bndry	1024		; Address == 0
   0000 00 00               164 11$:	.word	11$ - bndry_2	; 00 00
                            165 
                            166 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 8
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Power of 2 Boundary Modes

                            168 
                            169 	.area	bndry_3	(ABS,OVR,DSEG)
   0001                     170 	.org	1
                            171 
   0002                     172 	.even			; Address == 2
   0002                     173 	.bndry	2		; Address == 2
   0004                     174 	.bndry	4		; Address == 4
   0008                     175 	.bndry	8		; Address == 8
   0010                     176 	.bndry	16		; Address == 16
   0020                     177 	.bndry	32		; Address == 32
   0040                     178 	.bndry	64		; Address == 64
   0080                     179 	.bndry	128		; Address == 128
   0100                     180 	.bndry	256		; Address == 256
   0200                     181 	.bndry	512		; Address == 512
   0400                     182 	.bndry	1024		; Address == 1024
                            183 
   0000                     184 	.org	0
   0000                     185 bndry_3:
                            186 
   0001                     187 	.org	1
   0002                     188 	.even			; Address == 2
   0002 00 02               189 1$:	.word	1$ - bndry_3	; 00 02
                            190 
   0001                     191 	.org	1
   0002                     192 	.bndry	2		; Address == 2
   0002 00 02               193 2$:	.word	2$ - bndry_3	; 00 02
                            194 
   0001                     195 	.org	1
   0004                     196 	.bndry	4		; Address == 4
   0004 00 04               197 3$:	.word	3$ - bndry_3	; 00 04
                            198 
   0001                     199 	.org	1
   0008                     200 	.bndry	8		; Address == 8
   0008 00 08               201 4$:	.word	4$ - bndry_3	; 00 08
                            202 
   0001                     203 	.org	1
   0010                     204 	.bndry	16		; Address == 16
   0010 00 10               205 5$:	.word	5$ - bndry_3	; 00 10
                            206 
   0001                     207 	.org	1
   0020                     208 	.bndry	32		; Address == 32
   0020 00 20               209 6$:	.word	6$ - bndry_3	; 00 20
                            210 
   0001                     211 	.org	1
   0040                     212 	.bndry	64		; Address == 64
   0040 00 40               213 7$:	.word	7$ - bndry_3	; 00 40
                            214 
   0001                     215 	.org	1
   0080                     216 	.bndry	128		; Address == 128
   0080 00 80               217 8$:	.word	8$ - bndry_3	; 00 80
                            218 
   0001                     219 	.org	1
   0100                     220 	.bndry	256		; Address == 256
   0100 01 00               221 9$:	.word	9$ - bndry_3	; 01 00
                            222 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                        Page 9
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Power of 2 Boundary Modes

   0001                     223 	.org	1
   0200                     224 	.bndry	512		; Address == 512
   0200 02 00               225 10$:	.word	10$ - bndry_3	; 02 00
                            226 
   0001                     227 	.org	1
   0400                     228 	.bndry	1024		; Address == 1024
   0400 04 00               229 11$:	.word	11$ - bndry_3	; 04 00
                            230 
                            231 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 10
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Non Power of 2 Boundary Modes

                            233 	.sbttl	Non Power of 2 Boundary Modes
                            234 
                            235 	.area	bndry_4	(ABS,OVR,DSEG)
   0000                     236 	.org	0
                            237 
   0000                     238 	.bndry	1		; Address == 0
   0000                     239 	.bndry	3		; Address == 0
   0000                     240 	.bndry	7		; Address == 0
   0000                     241 	.bndry	15		; Address == 0
   0000                     242 	.bndry	31		; Address == 0
                            243 
   0000                     244 	.org	0
   0000                     245 bndry_4:
                            246 
   0000                     247 	.org	0
   0000                     248 	.bndry	1		; Address == 0
   0000 00 00               249 1$:	.word	1$ - bndry_4	; 00 00
                            250 
   0000                     251 	.org	0
   0000                     252 	.bndry	3		; Address == 0
   0000 00 00               253 2$:	.word	2$ - bndry_4	; 00 00
                            254 
   0000                     255 	.org	0
   0000                     256 	.bndry	7		; Address == 0
   0000 00 00               257 3$:	.word	3$ - bndry_4	; 00 00
                            258 
   0000                     259 	.org	0
   0000                     260 	.bndry	15		; Address == 0
   0000 00 00               261 4$:	.word	4$ - bndry_4	; 00 00
                            262 
   0000                     263 	.org	0
   0000                     264 	.bndry	31		; Address == 0
   0000 00 00               265 5$:	.word	5$ - bndry_4	; 00 00
                            266 
                            267 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 11
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Non Power of 2 Boundary Modes

                            269 
                            270 	.area	bndry_5	(ABS,OVR,DSEG)
   0001                     271 	.org	1
                            272 
   0003                     273 	.bndry	3		; Address == 3
   0005                     274 	.bndry	5		; Address == 5
   0009                     275 	.bndry	9		; Address == 9
   0011                     276 	.bndry	17		; Address == 17
   0021                     277 	.bndry	33		; Address == 33
                            278 
   0000                     279 	.org	0
   0000                     280 bndry_5:
                            281 
   0001                     282 	.org	1
   0003                     283 	.bndry	3		; Address == 3
   0003 00 03               284 1$:	.word	1$ - bndry_5	; 00 03
                            285 
   0001                     286 	.org	1
   0005                     287 	.bndry	5		; Address == 5
   0005 00 05               288 2$:	.word	2$ - bndry_5	; 00 05
                            289 
   0001                     290 	.org	1
   0009                     291 	.bndry	9		; Address == 9
   0009 00 09               292 3$:	.word	3$ - bndry_5	; 00 09
                            293 
   0001                     294 	.org	1
   0011                     295 	.bndry	17		; Address == 17
   0011 00 11               296 4$:	.word	4$ - bndry_5	; 00 11
                            297 
   0001                     298 	.org	1
   0021                     299 	.bndry	33		; Address == 33
   0021 00 21               300 5$:	.word	5$ - bndry_5	; 00 21
                            301 
                            302 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 12
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Non Power of 2 Boundary Modes

                            304 
                            305 	.area	bndry_6	(ABS,OVR,DSEG)
   002F                     306 	.org	47
                            307 
   0030                     308 	.bndry	3		; Address == 48
   0030                     309 	.bndry	6		; Address == 48
   0030                     310 	.bndry	12		; Address == 48
   0030                     311 	.bndry	24		; Address == 48
   0030                     312 	.bndry	48		; Address == 48
   0060                     313 	.bndry	96		; Address == 96
   00C0                     314 	.bndry	192		; Address == 192
   0180                     315 	.bndry	384		; Address == 384
   0300                     316 	.bndry	768		; Address == 768
   0600                     317 	.bndry	1536		; Address == 1536
                            318 
   0000                     319 	.org	0
   0000                     320 bndry_6:
                            321 
   002F                     322 	.org	47
   0030                     323 	.bndry	3		; Address == 48
   0030 00 30               324 1$:	.word	1$ - bndry_6	; 00 30
                            325 
   002F                     326 	.org	47
   0030                     327 	.bndry	6		; Address == 48
   0030 00 30               328 2$:	.word	2$ - bndry_6	; 00 30
                            329 
   002F                     330 	.org	47
   0030                     331 	.bndry	12		; Address == 48
   0030 00 30               332 3$:	.word	3$ - bndry_6	; 00 30
                            333 
   002F                     334 	.org	47
   0030                     335 	.bndry	24		; Address == 48
   0030 00 30               336 4$:	.word	4$ - bndry_6	; 00 30
                            337 
   002F                     338 	.org	47
   0030                     339 	.bndry	48		; Address == 48
   0030 00 30               340 5$:	.word	5$ - bndry_6	; 00 30
                            341 
   002F                     342 	.org	47
   0060                     343 	.bndry	96		; Address == 96
   0060 00 60               344 6$:	.word	6$ - bndry_6	; 00 60
                            345 
   002F                     346 	.org	47
   00C0                     347 	.bndry	192		; Address == 192
   00C0 00 C0               348 7$:	.word	7$ - bndry_6	; 00 C0
                            349 
   002F                     350 	.org	47
   0180                     351 	.bndry	384		; Address == 384
   0180 01 80               352 8$:	.word	8$ - bndry_6	; 01 80
                            353 
   002F                     354 	.org	47
   0300                     355 	.bndry	768		; Address == 768
   0300 03 00               356 9$:	.word	9$ - bndry_6	; 03 00
                            357 
   002F                     358 	.org	47
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 13
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Non Power of 2 Boundary Modes

   0600                     359 	.bndry	1536		; Address == 1536
   0600 06 00               360 10$:	.word	10$ - bndry_6	; 06 00
                            361 
                            362 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 14
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
String Directives

                            364 	.sbttl	String Directives
                            365 
                            366 	.area	_DATA			; Data Area
                            367 
   0098 61 62 63 64 65      368 	.ascii	"abcde"			; 61 62 63 64 65
   009D 61 62 63 64 65 00   369 	.asciz	"abcde"			; 61 62 63 64 65 00
   00A3 61 62 63 64 E5      370 	.ascis	"abcde"			; 61 62 63 64 E5
                            371 
   00A8 61 0D 62 0A         372 	.ascii	/a/(13)/b/(10)		; 61 0D 62 0A
   00AC 61 0D 62 0A 00      373 	.asciz	/a/(13)/b/(10)		; 61 0D 62 0A 00
   00B1 61 0D 62 8A         374 	.ascis	/a/(13)/b/(10)		; 61 0D 62 8A
                            375 
   00B5 0D 61               376 	.ascii	(13)/a/			; 0D 61
   00B7 0D 61 00            377 	.asciz	(13)/a/			; 0D 61 00
   00BA 0D E1               378 	.ascis	(13)/a/			; 0D E1
                            379 
                            380 
                            381 	.sbttl	Expression Evaluation
                            382 
                     0000   383 	n0x00	=	0x00
                     0001   384 	n0x01	=	0x01
                     0010   385 	n0x10	=	0x10
                     00FF   386 	n0xff	=	0xff
                     EEFF   387 	n0xeeff =	0xeeff
                            388 
                            389 
                     00FF   390 	n	=	< n0xeeff	; 0xff		low byte
   00BC 00 FF               391 	.byte	>n,<n			; 00 FF
                     00EE   392 	n	=	> n0xeeff	; 0xee		high byte
   00BE 00 EE               393 	.byte	>n,<n			; 00 EE
                            394 
                            395 
                     0041   396 	n	=	'A		; 0x41		single character
   00C0 00 41               397 	.byte	>n,<n			; 00 41
                     4142   398 	n	=	"AB		; 0x4142	double character
   00C2 41 42               399 	.byte	>n,<n			; 41 42
                     0001   400 	n	=	n0x01		; 0x01		assignment
   00C4 00 01               401 	.byte	>n,<n			; 00 01
                     0002   402 	n	=	n + n0x01	; 0x02		addition
   00C6 00 02               403 	.byte	>n,<n			; 00 02
                     0001   404 	n	=	n - n0x01	; 0x01		subtraction
   00C8 00 01               405 	.byte	>n,<n			; 00 01
                     0005   406 	n	=	n * 0x05	; 0x05		multiplication
   00CA 00 05               407 	.byte	>n,<n			; 00 05
                     0002   408 	n	=	n / 0x02	; 0x02		division
   00CC 00 02               409 	.byte	>n,<n			; 00 02
                     0001   410 	n	=	n0x10 % 0x05	; 0x01		modulus
   00CE 00 01               411 	.byte	>n,<n			; 00 01
                     0011   412 	n	=	n0x10 | n0x01	; 0x11		or
   00D0 00 11               413 	.byte	>n,<n			; 00 11
                     0001   414 	n	=	n0xff & n0x01	; 0x01		and
   00D2 00 01               415 	.byte	>n,<n			; 00 01
                     0010   416 	n	=	n0x01 << 4	; 0x10		left shift
   00D4 00 10               417 	.byte	>n,<n			; 00 10
                     0001   418 	n	=	n0x10 >> 4	; 0x01		right shift
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 15
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Expression Evaluation

   00D6 00 01               419 	.byte	>n,<n			; 00 01
                     00EF   420 	n	=	n0xff ^ n0x10	; 0xef		xor
   00D8 00 EF               421 	.byte	>n,<n			; 00 EF
                     00FF   422 	n	=	n ^ n0x10	; 0xff		xor
   00DA 00 FF               423 	.byte	>n,<n			; 00 FF
                     FFEF   424 	n	=	~n0x10		; 0xffef	1's complement
   00DC FF EF               425 	.byte	>n,<n			; FF EF
                     FFF0   426 	n	=	-n0x10		; 0xfff0	2's complement
   00DE FF F0               427 	.byte	>n,<n			; FF F0
                            428 
                            429 
                            430 
                     00FF   431 	n	=	n0xeeff & 0xff	; 0xff		low byte
   00E0 00 FF               432 	.byte	>n,<n			; 00 FF
                     00EE   433 	n = (n0xeeff & 0xff00)/0x100	; 0xee		high byte
   00E2 00 EE               434 	.byte	>n,<n			; 00 EE
                            435 
                            436 
                     00FF   437 	n	=	n0xeeff % 0x100 ; 0xff		low byte
   00E4 00 FF               438 	.byte	>n,<n			; 00 FF
                     00EE   439 	n	=	n0xeeff / 0x100 ; 0xee		high byte
   00E6 00 EE               440 	.byte	>n,<n			; 00 EE
                            441 
                            442 
                     004E   443 	n	=	3*(2 + 4*(6))	; 0x4e		expression evaluation
   00E8 00 4E               444 	.byte	>n,<n			; 00 4E
                     021E   445 	n	=	2*(0x20 + <~n0x10)	; 0x21e
   00EA 02 1E               446 	.byte	>n,<n			; 02 1E
                            447 
                            448 
                            449 	.sbttl	arithmatic tests
                            450 
                            451 	;
                            452 	; The following series of tests verify that
                            453 	; the arithmetic is 16-Bit and unsigned.
                            454 
                            455 
                            456 	.sbttl	Addition
                            457 
                     0002   458 	n =	 1 +  1			; 0x0001 + 0x0001 ; 0x0002
   00EC 00 02               459 	.byte	>n,<n			; 00 02
                     0000   460 	n =	-1 +  1			; 0xFFFF + 0x0001 ; 0x0000
   00EE 00 00               461 	.byte	>n,<n			; 00 00
                     FFFE   462 	n =	-1 + -1			; 0xFFFF + 0xFFFF ; 0xFFFE
   00F0 FF FE               463 	.byte	>n,<n			; FF FE
                            464 
                     0000   465 	n =	 32768 +  32768		; 0x8000 + 0x8000 ; 0x0000
   00F2 00 00               466 	.byte	>n,<n			; 00 00
                     0000   467 	n =	-32768 +  32768		; 0x8000 + 0x8000 ; 0x0000
   00F4 00 00               468 	.byte	>n,<n			; 00 00
                     0000   469 	n =	-32768 + -32768		; 0x8000 + 0x8000 ; 0x0000
   00F6 00 00               470 	.byte	>n,<n			; 00 00
                            471 
                     0000   472 	n =	 65535 +  1		; 0xFFFF + 0x0001 ; 0x0000
   00F8 00 00               473 	.byte	>n,<n			; 00 00
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 16
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Addition

                     FFFE   474 	n =	 65535 + -1		; 0xFFFF + 0xFFFF ; 0xFFFE
   00FA FF FE               475 	.byte	>n,<n			; FF FE
                            476 
                            477 
                            478 	.sbttl	Subtraction
                            479 
                     0000   480 	n =	 1 -  1			; 0x0001 - 0x0001 ; 0x0000
   00FC 00 00               481 	.byte	>n,<n			; 00 00
                     FFFE   482 	n =	-1 -  1			; 0xFFFF - 0x0001 ; 0xFFFE
   00FE FF FE               483 	.byte	>n,<n			; FF FE
                     0000   484 	n =	-1 - -1			; 0xFFFF - 0xFFFF ; 0x0000
   0100 00 00               485 	.byte	>n,<n			; 00 00
                            486 
                     0000   487 	n =	 32768 -  32768		; 0x8000 - 0x8000 ; 0x0000
   0102 00 00               488 	.byte	>n,<n			; 00 00
                     0000   489 	n =	-32768 -  32768		; 0x8000 - 0x8000 ; 0x0000
   0104 00 00               490 	.byte	>n,<n			; 00 00
                     0000   491 	n =	-32768 - -32768		; 0x8000 - 0x8000 ; 0x0000
   0106 00 00               492 	.byte	>n,<n			; 00 00
                            493 
                     FFFE   494 	n =	 65535 -  1		; 0xFFFF - 0x0001 ; 0xFFFE
   0108 FF FE               495 	.byte	>n,<n			; FF FE
                     0000   496 	n =	 65535 - -1		; 0xFFFF - 0xFFFF ; 0x0000
   010A 00 00               497 	.byte	>n,<n			; 00 00
                            498 
                            499 
                            500 	.sbttl	Multiplication
                            501 
                     0001   502 	n =	 1 *  1			; 0x0001 * 0x0001 ; 0x0001
   010C 00 01               503 	.byte	>n,<n			; 00 01
                     FFFF   504 	n =	 1 * -1			; 0x0001 * 0xFFFF ; 0xFFFF
   010E FF FF               505 	.byte	>n,<n			; FF FF
                     0001   506 	n =	-1 * -1			; 0xFFFF * 0xFFFF ; 0x0001
   0110 00 01               507 	.byte	>n,<n			; 00 01
                            508 
                     0000   509 	n =	 256 *  256		; 0x0100 * 0x0100 ; 0x0000
   0112 00 00               510 	.byte	>n,<n			; 00 00
                     0000   511 	n =	 256 * -256		; 0x0100 * 0xFF00 ; 0x0000
   0114 00 00               512 	.byte	>n,<n			; 00 00
                     0000   513 	n =	-256 * -256		; 0xFF00 * 0xFF00 ; 0x0000
   0116 00 00               514 	.byte	>n,<n			; 00 00
                            515 
                            516 
                            517 	.sbttl	Division
                            518 
                     0001   519 	n =	 1 /  1			; 0x0001 / 0x0001 ; 0x0001
   0118 00 01               520 	.byte	>n,<n			; 00 01
                     0005   521 	n =	10 /  2			; 0x000A / 0x0002 ; 0x0005
   011A 00 05               522 	.byte	>n,<n			; 00 05
                     0080   523 	n =	512 / 4			; 0x0200 / 0x0004 ; 0x0080
   011C 00 80               524 	.byte	>n,<n			; 00 80
                     4000   525 	n =	32768 / 2		; 0x8000 / 0x0002 ; 0x4000
   011E 40 00               526 	.byte	>n,<n			; 40 00
                     7FFF   527 	n =	65535 / 2		; 0xFFFF / 0x0002 ; 0x7FFF
   0120 7F FF               528 	.byte	>n,<n			; 7F FF
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 17
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Division

                            529 
                     0000   530 	n = 	 1 / -1			; 0x0001 / 0xFFFF ; 0x0000
   0122 00 00               531 	.byte	>n,<n			; 00 00
                     0000   532 	n =	 32767 / -1		; 0x7FFF / 0xFFFF ; 0x0000
   0124 00 00               533 	.byte	>n,<n			; 00 00
                     0000   534 	n =	 32768 / -1		; 0x8000 / 0xFFFF ; 0x0000
   0126 00 00               535 	.byte	>n,<n			; 00 00
                     0000   536 	n =	 65534 / -1		; 0xFFFE / 0xFFFF ; 0x0000
   0128 00 00               537 	.byte	>n,<n			; 00 00
                     0001   538 	n =	 65535 / -1		; 0xFFFF / 0xFFFF ; 0x0001
   012A 00 01               539 	.byte	>n,<n			; 00 01
                     0001   540 	n =	-1 / -1			; 0xFFFF / 0xFFFF ; 0x0001
   012C 00 01               541 	.byte	>n,<n			; 00 01
                     0000   542 	n =	-2 / -1			; 0xFFFE / 0xFFFF ; 0x0000
   012E 00 00               543 	.byte	>n,<n			; 00 00
                     0000   544 	n =	-32768 / -1		; 0x8000 / 0xFFFF ; 0x0000
   0130 00 00               545 	.byte	>n,<n			; 00 00
                     0000   546 	n =	-32769 / -1		; 0x7FFF / 0xFFFF ; 0x0000
   0132 00 00               547 	.byte	>n,<n			; 00 00
                     0000   548 	n =	-65535 / -1		; 0x0001 / 0xFFFF ; 0x0000
   0134 00 00               549 	.byte	>n,<n			; 00 00
                     0000   550 	n =	-65536 / -1		; 0x0000 / 0xFFFF ; 0x0000
   0136 00 00               551 	.byte	>n,<n			; 00 00
                            552 
                     0000   553 	n =	-256 /   -1		; 0xFF00 / 0xFFFF ; 0x0000
   0138 00 00               554 	.byte	>n,<n			; 00 00
                     0000   555 	n =	-256 / -255		; 0xFF00 / 0xFF01 ; 0x0000
   013A 00 00               556 	.byte	>n,<n			; 00 00
                     0001   557 	n =	-256 / -256		; 0xFF00 / 0xFF00 ; 0x0001
   013C 00 01               558 	.byte	>n,<n			; 00 01
                     0001   559 	n =	-256 / -257		; 0xFF00 / 0xFEFF ; 0x0001
   013E 00 01               560 	.byte	>n,<n			; 00 01
                     0001   561 	n =	-256 / -32767		; 0xFF00 / 0x8001 ; 0x0001
   0140 00 01               562 	.byte	>n,<n			; 00 01
                     0001   563 	n =	-256 / -32768		; 0xFF00 / 0x8000 ; 0x0001
   0142 00 01               564 	.byte	>n,<n			; 00 01
                     0001   565 	n =	-256 /  32768		; 0xFF00 / 0x8000 ; 0x0001
   0144 00 01               566 	.byte	>n,<n			; 00 01
                     0001   567 	n =	-256 /  65280		; 0xFF00 / 0xFF00 ; 0x0001
   0146 00 01               568 	.byte	>n,<n			; 00 01
                     0000   569 	n =	-256 /  65281		; 0xFF00 / 0xFF01 ; 0x0000
   0148 00 00               570 	.byte	>n,<n			; 00 00
                     0000   571 	n =	-256 /  65535		; 0xFF00 / 0xFFFF ; 0x0000
   014A 00 00               572 	.byte	>n,<n			; 00 00
                            573 
                            574 
                            575 	.sbttl	Modulus
                            576 
                     0000   577 	n =	 1 %  1			; 0x0001 % 0x0001 ; 0x0000
   014C 00 00               578 	.byte	>n,<n			; 00 00
                     0000   579 	n =	10 %  2			; 0x000A % 0x0002 ; 0x0000
   014E 00 00               580 	.byte	>n,<n			; 00 00
                     0000   581 	n =	512 % 4			; 0x0200 % 0x0004 ; 0x0000
   0150 00 00               582 	.byte	>n,<n			; 00 00
                     0000   583 	n =	32768 % 2		; 0x8000 % 0x0002 ; 0x0000
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 18
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Modulus

   0152 00 00               584 	.byte	>n,<n			; 00 00
                     0001   585 	n =	65535 % 2		; 0xFFFF % 0x0002 ; 0x0001
   0154 00 01               586 	.byte	>n,<n			; 00 01
                            587 
                     0001   588 	n = 	 1 % -1			; 0x0001 % 0xFFFF ; 0x0001
   0156 00 01               589 	.byte	>n,<n			; 00 01
                     7FFF   590 	n =	 32767 % -1		; 0x7FFF % 0xFFFF ; 0x7FFF
   0158 7F FF               591 	.byte	>n,<n			; 7F FF
                     8000   592 	n =	 32768 % -1		; 0x8000 % 0xFFFF ; 0x8000
   015A 80 00               593 	.byte	>n,<n			; 80 00
                     FFFE   594 	n =	 65534 % -1		; 0xFFFE % 0xFFFF ; 0xFFFE
   015C FF FE               595 	.byte	>n,<n			; FF FE
                     0000   596 	n =	 65535 % -1		; 0xFFFF % 0xFFFF ; 0x0000
   015E 00 00               597 	.byte	>n,<n			; 00 00
                     0000   598 	n =	-1 % -1			; 0xFFFF % 0xFFFF ; 0x0000
   0160 00 00               599 	.byte	>n,<n			; 00 00
                     FFFE   600 	n =	-2 % -1			; 0xFFFE % 0xFFFF ; 0xFFFE
   0162 FF FE               601 	.byte	>n,<n			; FF FE
                     8000   602 	n =	-32768 % -1		; 0x8000 % 0xFFFF ; 0x8000
   0164 80 00               603 	.byte	>n,<n			; 80 00
                     7FFF   604 	n =	-32769 % -1		; 0x7FFF % 0xFFFF ; 0x7FFF
   0166 7F FF               605 	.byte	>n,<n			; 7F FF
                     0001   606 	n =	-65535 % -1		; 0x0001 % 0xFFFF ; 0x0001
   0168 00 01               607 	.byte	>n,<n			; 00 01
                     0000   608 	n =	-65536 % -1		; 0x0000 % 0xFFFF ; 0x0000
   016A 00 00               609 	.byte	>n,<n			; 00 00
                            610 
                     FF00   611 	n =	-256 %   -1		; 0xFF00 % 0xFFFF ; 0xFF00
   016C FF 00               612 	.byte	>n,<n			; FF 00
                     FF00   613 	n =	-256 % -255		; 0xFF00 % 0xFF01 ; 0xFF00
   016E FF 00               614 	.byte	>n,<n			; FF 00
                     0000   615 	n =	-256 % -256		; 0xFF00 % 0xFF00 ; 0x0000
   0170 00 00               616 	.byte	>n,<n			; 00 00
                     0001   617 	n =	-256 % -257		; 0xFF00 % 0xFEFF ; 0x0001
   0172 00 01               618 	.byte	>n,<n			; 00 01
                     7EFF   619 	n =	-256 % -32767		; 0xFF00 % 0x8001 ; 0x7EFF
   0174 7E FF               620 	.byte	>n,<n			; 7E FF
                     7F00   621 	n =	-256 % -32768		; 0xFF00 % 0x8000 ; 0x7F00
   0176 7F 00               622 	.byte	>n,<n			; 7F 00
                     7F00   623 	n =	-256 %  32768		; 0xFF00 % 0x8000 ; 0x7F00
   0178 7F 00               624 	.byte	>n,<n			; 7F 00
                     0000   625 	n =	-256 %  65280		; 0xFF00 % 0xFF00 ; 0x0000
   017A 00 00               626 	.byte	>n,<n			; 00 00
                     FF00   627 	n =	-256 %  65281		; 0xFF00 % 0xFF01 ; 0xFF00
   017C FF 00               628 	.byte	>n,<n			; FF 00
                     FF00   629 	n =	-256 %  65535		; 0xFF00 % 0xFFFF ; 0xFF00
   017E FF 00               630 	.byte	>n,<n			; FF 00
                            631 
                            632 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 19
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
IF, ELSE, and ENDIF

                            634 	.sbttl	IF, ELSE, and ENDIF
                            635 
                            636 	;*******************************************************
                            637 
                     0000   638 	n = 0
                     0000   639 	m = 0
                            640 
                     0000   641 	.if	0
                            642 		n = 1
                            643 		.if	0
                            644 		m = 1
                            645 		.else
                            646 		m = 2
                            647 		.endif
                     0001   648 	.else
                     0002   649 		n = 2
                            650 	.endif
                            651 
                            652 					; n = 2, m = 0
   0180 02 00               653 	.byte	n,m			; 02 00
                            654 
                            655 
                     0000   656 	n = 0
                     0000   657 	m = 0
                            658 
                     0001   659 	.if	1
                     0001   660 		n = 1
                     0000   661 		.if	0
                            662 		m = 1
                     0001   663 		.else
                     0002   664 		m = 2
                            665 		.endif
                     0000   666 	.else
                            667 		n = 2
                            668 	.endif
                            669 
                            670 					; n = 1, m = 2
   0182 01 02               671 	.byte	n,m			; 01 02
                            672 
                            673 	;*******************************************************
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 20
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
IF, ELSE, and ENDIF

                            675 	;*******************************************************
                            676 
                     0000   677 	n = 0
                     0000   678 	m = 0
                            679 
                     0000   680 	.if	0
                            681 		n = 1
                            682 		.if	1
                            683 		m = 1
                            684 		.else
                            685 		m = 2
                            686 		.endif
                     0001   687 	.else
                     0002   688 		n = 2
                            689 	.endif
                            690 
                            691 					; n = 2, m = 0
   0184 02 00               692 	.byte	n,m			; 02 00
                            693 
                            694 
                     0000   695 	n = 0
                     0000   696 	m = 0
                            697 
                     0001   698 	.if	1
                     0001   699 		n = 1
                     0001   700 		.if	1
                     0001   701 		m = 1
                     0000   702 		.else
                            703 		m = 2
                            704 		.endif
                     0000   705 	.else
                            706 		n = 2
                            707 	.endif
                            708 
                            709 					; n = 1, m = 1
   0186 01 01               710 	.byte	n,m			; 01 01
                            711 
                            712 	;*******************************************************
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 21
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
IF, ELSE, and ENDIF

                            714 	;*******************************************************
                            715 
                     0000   716 	n = 0
                     0000   717 	m = 0
                            718 
                     0000   719 	.if	0
                            720 		n = 1
                     0001   721 	.else
                     0000   722 		.if	0
                            723 		m = 1
                     0001   724 		.else
                     0002   725 		m = 2
                            726 		.endif
                     0002   727 		n = 2
                            728 	.endif
                            729 
                            730 					; n = 2, m = 2
   0188 02 02               731 	.byte	n,m			; 02 02
                            732 
                            733 
                     0000   734 	n = 0
                     0000   735 	m = 0
                            736 
                     0001   737 	.if	1
                     0001   738 		n = 1
                     0000   739 	.else
                            740 		.if	0
                            741 		m = 1
                            742 		.else
                            743 		m = 2
                            744 		.endif
                            745 		n = 2
                            746 	.endif
                            747 
                            748 					; n = 1, m = 0
   018A 01 00               749 	.byte	n,m			; 01 00
                            750 
                            751 	;*******************************************************
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 22
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
IF, ELSE, and ENDIF

                            753 	;*******************************************************
                            754 
                     0000   755 	n = 0
                     0000   756 	m = 0
                            757 
                     0000   758 	.if	0
                            759 		n = 1
                     0001   760 	.else
                     0001   761 		.if	1
                     0001   762 		m = 1
                     0000   763 		.else
                            764 		m = 2
                            765 		.endif
                     0002   766 		n = 2
                            767 	.endif
                            768 
                            769 					; n = 2, m = 1
   018C 02 01               770 	.byte	n,m			; 02 01
                            771 
                            772 
                     0000   773 	n = 0
                     0000   774 	m = 0
                            775 
                     0001   776 	.if	1
                     0001   777 		n = 1
                     0000   778 	.else
                            779 		.if	1
                            780 		m = 1
                            781 		.else
                            782 		m = 2
                            783 		.endif
                            784 		n = 2
                            785 	.endif
                            786 
                            787 					; n = 1, m = 0
   018E 01 00               788 	.byte	n,m			; 01 00
                            789 
                            790 	;*******************************************************
                            791 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 23
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Signed Conditionals With -1

                            793 	.sbttl	Signed Conditionals With -1
                            794 
                     FFFF   795 	n = -1
                            796 
                     0000   797 	.ifeq	n
                            798 		.error	1		; n = -1, .ifeq n  != 0
                            799 	.endif
                            800 
                     0001   801 	.ifne	n
                     0000   802 	.else
                            803 		.error	1		; n = -1, .ifne n  != 0
                            804 	.endif
                            805 
                     0000   806 	.ifgt	n
                            807 		.error	1		; n = -1, .ifgt n  !>= 0
                            808 	.endif
                            809 
                     0001   810 	.iflt	n
                     0000   811 	.else
                            812 		.error	1		; n = -1, .iflt n  !>= 0
                            813 	.endif
                            814 
                     0000   815 	.ifge	n
                            816 		.error	1		; n = -1, .ifge n  !>= 0
                            817 	.endif
                            818 
                     0001   819 	.ifle	n
                     0000   820 	.else
                            821 		.error	1		; n = -1, .ifle n  !> 0
                            822 	.endif
                            823 
                            824 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 24
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Signed Conditionals With 0

                            826 	.sbttl	Signed Conditionals With 0
                            827 
                     0000   828 	n = 0
                            829 
                     0001   830 	.ifeq	n
                     0000   831 	.else
                            832 		.error	1		; n = 0, .ifeq n  == 0
                            833 	.endif
                            834 
                     0000   835 	.ifne	n
                            836 		.error	1		; n = 0, .ifne n  == 0
                            837 	.endif
                            838 
                     0000   839 	.ifgt	n
                            840 		.error	1		; n = 0, .ifgt n  !> 0
                            841 	.endif
                            842 
                     0000   843 	.iflt	n
                            844 		.error	1		; n = 0, .iflt n  !< 0
                            845 	.endif
                            846 
                     0001   847 	.ifge	n
                     0000   848 	.else
                            849 		.error	1		; n = 0, .ifge n  !< 0
                            850 	.endif
                            851 
                     0001   852 	.ifle	n
                     0000   853 	.else
                            854 		.error	1		; n = 0, .ifle n  !> 0
                            855 	.endif
                            856 
                            857 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 25
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Signed Conditionals With +1

                            859 	.sbttl	Signed Conditionals With +1
                            860 
                     0001   861 	n = +1
                            862 
                     0000   863 	.ifeq	n
                            864 		.error	1		; n = +1, .ifeq n  != 0
                            865 	.endif
                            866 
                     0001   867 	.ifne	n
                     0000   868 	.else
                            869 		.error	1		; n = +1, .ifne n  != 0
                            870 	.endif
                            871 
                     0001   872 	.ifgt	n
                     0000   873 	.else
                            874 		.error	1		; n = +1, .ifgt n  !<= 0
                            875 	.endif
                            876 
                     0000   877 	.iflt	n
                            878 		.error	1		; n = +1, .iflt n  !<= 0
                            879 	.endif
                            880 
                     0001   881 	.ifge	n
                     0000   882 	.else
                            883 		.error	1		; n = +1, .ifge n  !< 0
                            884 	.endif
                            885 
                     0000   886 	.ifle	n
                            887 		.error	1		; n = +1, .ifle n  !<= 0
                            888 	.endif
                            889 
                            890 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 26
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Signed Conditionals With -1

                            892 	.sbttl	Alternate Signed Conditionals With -1
                            893 
                     FFFF   894 	n = -1
                            895 
                     0000   896 	.if	eq	n
                            897 		.error	1		; n = -1, .ifeq n  != 0
                            898 	.endif
                            899 
                     0001   900 	.if	ne	n
                     0000   901 	.else
                            902 		.error	1		; n = -1, .ifne n  != 0
                            903 	.endif
                            904 
                     0000   905 	.if	gt	n
                            906 		.error	1		; n = -1, .ifgt n  !>= 0
                            907 	.endif
                            908 
                     0001   909 	.if	lt	n
                     0000   910 	.else
                            911 		.error	1		; n = -1, .iflt n  !>= 0
                            912 	.endif
                            913 
                     0000   914 	.if	ge	n
                            915 		.error	1		; n = -1, .ifge n  !>= 0
                            916 	.endif
                            917 
                     0001   918 	.if	le	n
                     0000   919 	.else
                            920 		.error	1		; n = -1, .ifle n  !> 0
                            921 	.endif
                            922 
                            923 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 27
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Signed Conditionals With 0

                            925 	.sbttl	Alternate Signed Conditionals With 0
                            926 
                     0000   927 	n = 0
                            928 
                     0001   929 	.if	eq	n
                     0000   930 	.else
                            931 		.error	1		; n = 0, .ifeq n  == 0
                            932 	.endif
                            933 
                     0000   934 	.if	ne	n
                            935 		.error	1		; n = 0, .ifne n  == 0
                            936 	.endif
                            937 
                     0000   938 	.if	gt	n
                            939 		.error	1		; n = 0, .ifgt n  !> 0
                            940 	.endif
                            941 
                     0000   942 	.if	lt	n
                            943 		.error	1		; n = 0, .iflt n  !< 0
                            944 	.endif
                            945 
                     0001   946 	.if	ge	n
                     0000   947 	.else
                            948 		.error	1		; n = 0, .ifge n  !< 0
                            949 	.endif
                            950 
                     0001   951 	.if	le	n
                     0000   952 	.else
                            953 		.error	1		; n = 0, .ifle n  !> 0
                            954 	.endif
                            955 
                            956 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 28
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Signed Conditionals With +1

                            958 	.sbttl	Alternate Signed Conditionals With +1
                            959 
                     0001   960 	n = +1
                            961 
                     0000   962 	.if	eq	n
                            963 		.error	1		; n = +1, .ifeq n  != 0
                            964 	.endif
                            965 
                     0001   966 	.if	ne	n
                     0000   967 	.else
                            968 		.error	1		; n = +1, .ifne n  != 0
                            969 	.endif
                            970 
                     0001   971 	.if	gt	n
                     0000   972 	.else
                            973 		.error	1		; n = +1, .ifgt n  !<= 0
                            974 	.endif
                            975 
                     0000   976 	.if	lt	n
                            977 		.error	1		; n = +1, .iflt n  !<= 0
                            978 	.endif
                            979 
                     0001   980 	.if	ge	n
                     0000   981 	.else
                            982 		.error	1		; n = +1, .ifge n  !< 0
                            983 	.endif
                            984 
                     0000   985 	.if	le	n
                            986 		.error	1		; n = +1, .ifle n  !<= 0
                            987 	.endif
                            988 
                            989 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 29
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Conditionals With String Tests

                            991 	.sbttl	Conditionals With String Tests
                            992 
                     0000   993 	.ifb	J		; 0
                            994 	 .error	1		; .if b,J failed
                            995 	.endif
                            996 
                     0001   997 	.ifb			; 1
   0190 06                  998 	 .byte	0x06	        ; 06
                            999 	.endif
                           1000 
                     0000  1001 	.ifnb			; 0
                           1002 	 .error	1		; .if nb failed
                           1003 	.endif
                           1004 
                     0001  1005 	.ifnb	J		; 1
   0191 07                 1006 	 .byte	0x07		; 07
                           1007 	.endif
                           1008 
                           1009 	.undefine	defsym
                     0000  1010 	.ifdef	defsym		; 0
                           1011 	 .error	1		; .if def,defsym failed
                           1012 	.endif
                           1013 
                           1014 	.define		defsym
                     0001  1015 	.ifdef	defsym		; 1
   0192 08                 1016 	 .byte	0x08	        ; 08
                           1017 	.endif
                           1018 
                     0000  1019 	.ifndef	defsym		; 0
                           1020 	 .error	1		; .if def,defsym failed
                           1021 	.endif
                           1022 
                           1023 	.undefine	defsym
                     0001  1024 	.ifndef	defsym		; 1
   0193 09                 1025 	 .byte	0x09		; 09
                           1026 	.endif
                           1027 
                     0000  1028 	.ifidn	A,B		; 0
                           1029 	 .error	1		; .if iden A,B failed
                           1030 	.endif
                           1031 
                     0001  1032 	.ifidn	D,D		; 1
   0194 0A                 1033 	 .byte	0x0A		; 0A
                           1034 	.endif
                           1035 
                     0000  1036 	.ifdif	D,D		; 0
                           1037 	 .error	1		; .if dif D,D failed
                           1038 	.endif
                           1039 
                     0001  1040 	.ifdif	A,B		; 1
   0195 0B                 1041 	 .byte	0x0B		; 0B
                           1042 	.endif
                           1043 
                           1044 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 30
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Conditionals With String Tests

                           1046 	.sbttl	Alternate Conditionals With String Tests
                           1047 
                     0000  1048 	.if	b	J	; 0
                           1049 	 .error	1		; .if b,J failed
                           1050 	.endif
                           1051 
                     0001  1052 	.if	b		; 1
   0196 06                 1053 	 .byte	0x06	        ; 06
                           1054 	.endif
                           1055 
                     0000  1056 	.if	nb		; 0
                           1057 	 .error	1		; .if nb failed
                           1058 	.endif
                           1059 
                     0001  1060 	.if	nb	J	; 1
   0197 07                 1061 	 .byte	0x07		; 07
                           1062 	.endif
                           1063 
                           1064 	.undefine	defsym
                     0000  1065 	.if	def	defsym	; 0
                           1066 	 .error	1		; .if def,defsym failed
                           1067 	.endif
                           1068 
                           1069 	.define		defsym
                     0001  1070 	.if	def	defsym	; 1
   0198 08                 1071 	 .byte	0x08	        ; 08
                           1072 	.endif
                           1073 
                     0000  1074 	.if	ndef	defsym	; 0
                           1075 	 .error	1		; .if def,defsym failed
                           1076 	.endif
                           1077 
                           1078 	.undefine	defsym
                     0001  1079 	.if	ndef	defsym	; 1
   0199 09                 1080 	 .byte	0x09		; 09
                           1081 	.endif
                           1082 
                     0000  1083 	.if	idn	A,B	; 0
                           1084 	 .error	1		; .if iden A,B failed
                           1085 	.endif
                           1086 
                     0001  1087 	.if	idn	D,D	; 1
   019A 0A                 1088 	 .byte	0x0A		; 0A
                           1089 	.endif
                           1090 
                     0000  1091 	.if	dif	D,D	; 0
                           1092 	 .error	1		; .if dif D,D failed
                           1093 	.endif
                           1094 
                     0001  1095 	.if	dif	A,B	; 1
   019B 0B                 1096 	 .byte	0x0B		; 0B
                           1097 	.endif
                           1098 
                           1099 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 31
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Signed Immediate Conditionals

                           1101 	.sbttl	Signed Immediate Conditionals
                           1102 
                     FFFF  1103 	n = -1
                           1104 
                           1105 	.iifeq	n	.error	1	; n = -1, .ifeq n  != 0
   019C 01                 1106 	.iifne	n	.byte	0x01	; 01
                           1107 	.iifgt	n	.error	1	; n = -1, .ifgt n  !>= 0
   019D 02                 1108 	.iiflt	n	.byte	0x02	; 02
                           1109 	.iifge	n	.error	1	; n = -1, .ifge n  !>= 0
   019E 03                 1110 	.iifle	n	.byte	0x03	; 03
                           1111 
                           1112 
                     0000  1113 	n = 0
                           1114 
   019F 04                 1115 	.iifeq	n	.byte	0x04	; 04
                           1116 	.iifne	n	.error	1	; n = 0, .ifne n  == 0
                           1117 	.iifgt	n	.error	1	; n = 0, .ifgt n  !> 0
                           1118 	.iiflt	n	.error	1	; n = 0, .iflt n  !< 0
   01A0 05                 1119 	.iifge	n	.byte	0x05	; 05
   01A1 06                 1120 	.iifle	n	.byte	0x06	; 06
                           1121 
                           1122 
                     0001  1123 	n = +1
                           1124 
                           1125 	.iifeq	n	.error	1	; n = +1, .ifeq n  != 0
   01A2 07                 1126 	.iifne	n	.byte	0x07	; 07
   01A3 08                 1127 	.iifgt	n	.byte	0x08	; 08
                           1128 	.iiflt	n	.error	1	; n = +1, .iflt n  !<= 0
   01A4 09                 1129 	.iifge	n	.byte	0x09	; 09
                           1130 	.iifle	n	.error	1	; n = +1, .ifle n  !<= 0
                           1131 
                           1132 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 32
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Signed Immediate Conditionals

                           1134 	.sbttl	Alternate Signed Immediate Conditionals
                           1135 
                     FFFF  1136 	n = -1
                           1137 
                           1138 	.iif	eq,n	.error	1	; n = -1, .ifeq n  != 0
   01A5 01                 1139 	.iif	ne,n	.byte	0x01	; 01
                           1140 	.iif	gt,n	.error	1	; n = -1, .ifgt n  !>= 0
   01A6 02                 1141 	.iif	lt,n	.byte	0x02	; 02
                           1142 	.iif	ge,n	.error	1	; n = -1, .ifge n  !>= 0
   01A7 03                 1143 	.iif	le,n	.byte	0x03	; 03
                           1144 
                           1145 
                     0000  1146 	n = 0
                           1147 
   01A8 04                 1148 	.iif	eq,n	.byte	0x04	; 04
                           1149 	.iif	ne,n	.error	1	; n = 0, .ifne n  == 0
                           1150 	.iif	gt,n	.error	1	; n = 0, .ifgt n  !> 0
                           1151 	.iif	lt,n	.error	1	; n = 0, .iflt n  !< 0
   01A9 05                 1152 	.iif	ge,n	.byte	0x05	; 05
   01AA 06                 1153 	.iif	le,n	.byte	0x06	; 06
                           1154 
                           1155 
                     0001  1156 	n = +1
                           1157 
                           1158 	.iif	eq,n	.error	1	; n = +1, .ifeq n  != 0
   01AB 07                 1159 	.iif	ne,n	.byte	0x07	; 07
   01AC 08                 1160 	.iif	gt,n	.byte	0x08	; 08
                           1161 	.iif	lt,n	.error	1	; n = +1, .iflt n  !<= 0
   01AD 09                 1162 	.iif	ge,n	.byte	0x09	; 09
                           1163 	.iif	le,n	.error	1	; n = +1, .ifle n  !<= 0
                           1164 
                           1165 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 33
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Immediate Conditionals With Strings

                           1167 	.sbttl	Immediate Conditionals With Strings
                           1168 
                           1169 	.iifb	J	 .error	1	; .if b,J failed
   01AE 01                 1170 	.iifb	^!!	 .byte	0x01	; 01
                           1171 	.iifnb	^!!	 .error	1	; .if nb failed
   01AF 02                 1172 	.iifnb	J	 .byte	0x02	; 02
                           1173 
                           1174 	.undefine  defsym
                           1175 	.iifdef	defsym	 .error	1	; .if def,defsym failed
                           1176 
                           1177 	.define  defsym
   01B0 03                 1178 	.iifdef	defsym	.byte	0x03	; 03
                           1179 	.iifndef defsym	.error	1	; .if def,defsym failed
                           1180 
                           1181 	.undefine  defsym
   01B1 04                 1182 	.iifndef defsym	 .byte	0x04	; 04
                           1183 
                           1184 	.iifidn	A,B	.error	1	; .if iden A,B failed
   01B2 05                 1185 	.iifidn	D,D	.byte	0x05	; 05
                           1186 	.iifdif	D,D	.error	1	; .if dif D,D failed
   01B3 06                 1187 	.iifdif	A,B	.byte	0x06	; 06
                           1188 
                           1189 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 34
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Alternate Immediate Conditionals With Strings

                           1191 	.sbttl	Alternate Immediate Conditionals With Strings
                           1192 
                           1193 	.iif	b,J	 .error	1	; .if b,J failed
   01B4 01                 1194 	.iif	b,^!!	 .byte	0x01	; 01
                           1195 	.iif	nb,^!!	 .error	1	; .if nb failed
   01B5 02                 1196 	.iif	nb,J	 .byte	0x02	; 02
                           1197 
                           1198 	.undefine  defsym
                           1199 	.iif	def,defsym	 .error	1	; .if def,defsym failed
                           1200 
                           1201 	.define  defsym
   01B6 03                 1202 	.iif	def,defsym	.byte	0x03	; 03
                           1203 	.iif	ndef,defsym	.error	1	; .if def,defsym failed
                           1204 
                           1205 	.undefine  defsym
   01B7 04                 1206 	.iif	ndef,defsym	 .byte	0x04	; 04
                           1207 
                           1208 	.iif	idn	A,B	.error	1	; .if iden A,B failed
   01B8 05                 1209 	.iif	idn	D,D	.byte	0x05	; 05
                           1210 	.iif	dif	D,D	.error	1	; .if dif D,D failed
   01B9 06                 1211 	.iif	dif	A,B	.byte	0x06	; 06
                           1212 
                           1213 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 35
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Local Symbols

                           1215 	.sbttl	Local Symbols
                           1216 
   0000                    1217 	.org	0
                           1218 
   0000                    1219 lclsym0:
                           1220 					; forward references
   0000s00r14s00r16        1221 	.word	0$,1$			;s00r14s00r16
   0004s00r18s00r1A        1222 	.word	2$,3$			;s00r18s00r1A
   0008s00r1Cs00r1E        1223 	.word	4$,5$			;s00r1Cs00r1E
   000Cs00r20s00r22        1224 	.word	6$,7$			;s00r20s00r22
   0010s00r24s00r26        1225 	.word	8$,9$			;s00r24s00r26
                           1226 
   0014s00r26              1227 0$:	.word	9$			;s00r26
   0016s00r24              1228 1$:	.word	8$			;s00r24
   0018s00r22              1229 2$:	.word	7$			;s00r22
   001As00r20              1230 3$:	.word	6$			;s00r20
   001Cs00r1E              1231 4$:	.word	5$			;s00r1E
   001Es00r1C              1232 5$:	.word	4$			;s00r1C
   0020s00r1A              1233 6$:	.word	3$			;s00r1A
   0022s00r18              1234 7$:	.word	2$			;s00r18
   0024s00r16              1235 8$:	.word	1$			;s00r16
   0026s00r14              1236 9$:	.word	0$			;s00r14
   0028                    1237 10$:
                           1238 
                           1239 					; backward references
   0028s00r14s00r16        1240 	.word	0$,1$			;s00r14s00r16
   002Cs00r18s00r1A        1241 	.word	2$,3$			;s00r18s00r1A
   0030s00r1Cs00r1E        1242 	.word	4$,5$			;s00r1Cs00r1E
   0034s00r20s00r22        1243 	.word	6$,7$			;s00r20s00r22
   0038s00r24s00r26        1244 	.word	8$,9$			;s00r24s00r26
                           1245 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 36
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Local Symbols

                           1247 
   003C                    1248 lclsym1:
                           1249 					; forward references
   003Cs00r50s00r52        1250 	.word	0$,1$			;s00r50s00r52
   0040s00r54s00r56        1251 	.word	2$,3$			;s00r54s00r56
   0044s00r58s00r5A        1252 	.word	4$,5$			;s00r58s00r5A
   0048s00r5Cs00r5E        1253 	.word	6$,7$			;s00r5Cs00r5E
   004Cs00r60s00r62        1254 	.word	8$,9$			;s00r60s00r62
                           1255 
   0050s00r62              1256 0$:	.word	9$			;s00r62
   0052s00r60              1257 1$:	.word	8$			;s00r60
   0054s00r5E              1258 2$:	.word	7$			;s00r5E
   0056s00r5C              1259 3$:	.word	6$			;s00r5C
   0058s00r5A              1260 4$:	.word	5$			;s00r5A
   005As00r58              1261 5$:	.word	4$			;s00r58
   005Cs00r56              1262 6$:	.word	3$			;s00r56
   005Es00r54              1263 7$:	.word	2$			;s00r54
   0060s00r52              1264 8$:	.word	1$			;s00r52
   0062s00r50              1265 9$:	.word	0$			;s00r50
   0064                    1266 10$:
                           1267 
                           1268 					; backward references
   0064s00r50s00r52        1269 	.word	0$,1$			;s00r50s00r52
   0068s00r54s00r56        1270 	.word	2$,3$			;s00r54s00r56
   006Cs00r58s00r5A        1271 	.word	4$,5$			;s00r58s00r5A
   0070s00r5Cs00r5E        1272 	.word	6$,7$			;s00r5Cs00r5E
   0074s00r60s00r62        1273 	.word	8$,9$			;s00r60s00r62
                           1274 
                           1275 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 37
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Offset calculations

                           1277 	.sbttl	Offset calculations
                           1278 
                     0014  1279 	ofsbyte	=	(10$-0$)	; 0x0014
                     000A  1280 	ofsword	=	ofsbyte/2	; 0x000A
                           1281 
                           1282 					; 1$ + 0x001E
   0078s00r70              1283 	.word	1$+ofsbyte+ofsword	;s00r70
                           1284 
                           1285 
                           1286 	.sbttl	Lower/Upper Byte Selections
                           1287 
                           1288 	.globl	extern
                           1289 
                           1290 					; low byte
   007Ar01                 1291 	.byte	< (extern + 0x0001)	;r01
                           1292 
                           1293 					; low byte
   007Br00                 1294 	.byte	< (extern + 0x0200)	;r00
                           1295 
                           1296 					; high byte
   007Cs00                 1297 	.byte	> (extern + 0x0003)	;s00
                           1298 
                           1299 					; high byte
   007Ds04                 1300 	.byte	> (extern + 0x0400)	;s04
                           1301 
                           1302 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 38
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Area Definitions

                           1304 	.sbttl	Area Definitions
                           1305 
                           1306 	.globl	code0
                           1307 	.globl	cnstnt1,cnstnt2
                           1308 
                     ABCD  1309 	cnstnt0 == 0xabcd		; global equate
                           1310 
   007Es00r00              1311 code0:	.word	a00			;s00r00
   0080 AB CD              1312 	.word	cnstnt0			; AB CD
                           1313 
                           1314 	; Bank selected as _DSEG
                           1315 	; Overlay and Data Segment
                           1316 	.area	AreaA (OVR,DSEG,BANK=_DSEG)
                           1317 
                     1234  1318 	cnstnt1 = 0x1234
                           1319 
   0000 00 FF              1320 a00:	.word	0x00ff			; 00 FF
                           1321 
                           1322 	; Bank selected as _DSEG
                           1323 	; Overlay and Data Segment
                           1324 	.area	AreaB (ABS,OVR,DSEG,BANK=_DSEG)
                           1325 
                     5678  1326 	cnstnt2 = 0x5678
                           1327 
   0000s00r00              1328 	.word	a10			;s00r00
                           1329 
                           1330 	.area	AreaA
                           1331 
                     0022  1332 	.=.+0x0020
   0022s00r00              1333 	.word	a20			;s00r00
                           1334 
                           1335 	.area	AreaB
   0040                    1336 	.org	0x40
                           1337 
   0040s00r00s00r00s00r00  1338 	.word	a00,a10,a20		;s00r00s00r00s00r00
   0046s00r00s00r00        1339 	.word	AreaB,OVR		;s00r00s00r00
                           1340 
   004A                    1341 abcdabcd::				; global symbol
                           1342 
                           1343 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 39
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Processor Tests

                           1345 	.sbttl	Macro Processor Tests
                           1346 
                           1349 
                           1350 	.radix	X
                           1351 
                           1352 	;	The Macro Processor directives are:
                           1353 	;
                           1354 	;	.macro	arg(,arg ...)		Create a Macro Definition
                           1355 	;	.endm				End of Macro Definition
                           1356 	;
                           1357 	;	.mexit				Unconditional GoTo .endm
                           1358 	;
                           1359 	;	.irp	arg(,arg ...)		Indefinite Repeat Block
                           1360 	;	.irpc	acbdefg			Indefinite Repeat on Characters
                           1361 	;	.rept	arg			Repeat Code Block arg Times
                           1362 	;
                           1363 	;	.mdelete  arg(,arg ...)		Delete Macro Definitions
                           1364 	;
                           1365 	;	.nchr	arg			Number of Characters in String
                           1366 	;	.narg	sym			Return Number of args in .macro call
                           1367 	;	.ntyp	typ,symbol		Return Symbol Type - (ABS = 0, REL = 1)
                           1368 	;	.nval	val,symbol		Return Value of Symbol (As Absolute Value)
                           1369 	;
                           1370 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 40
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Creation

                           1372 	.sbttl	Macro Creation
                           1373 
                           1374 	; Macro definition with the
                           1375 	; name 'seta' and two arguments.
                           1376 	;
                           1377 	.macro	seta	A,B	; Define macro seta
                           1378 	  .byte	A,B		; 01 6A
                           1379 	.endm
                           1380 
   0000                    1381 	.org	0
                           1382 	seta	0x01, 'j
   0000 01 6A              1378 	  .byte	0x01,'j		; 01 6A
                           1383 
                           1384 	.mdelete	seta
                           1385 
                           1386 
                           1387 	; Macro definition with the
                           1388 	; name 'setb' and a regular
                           1389 	; argument and a dumby argument.
                           1390 	;
                           1391 	.macro	setb	A,?B	; Define macro setb
                           1392 B:	  .byte	A		; 02
                           1393 	  .word	B		;s00r00
                           1394 	.endm
                           1395 
   0000                    1396 	.org	0
                           1397 	setb	0x02, K		; Use label K
   0000 02                 1392 K:	  .byte	0x02		; 02
   0001s00r00              1393 	  .word	K		;s00r00
                           1398 
                           1399 	.mdelete	setb
                           1400 
                           1401 
                           1402 	.macro	setb	A,?B	; Define macro setb
                           1403 B:	  .byte	A		; 03
                           1404 	  .word	B		;s00r03
                           1405 	.endm
                           1406 
                           1407 	setb	0x03		; Create a local symbol
   0003 03                 1403 10000$:	  .byte	0x03		; 03
   0004s00r03              1404 	  .word	10000$		;s00r03
                           1408 
                           1409 	.mdelete	setb
                           1410 
                           1411 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 41
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Creation

                           1413 	; Macro definition with the
                           1414 	; name 'setc' and two regular
                           1415 	; arguments with concatenation.
                           1416 	;
                           1417 	.macro setc	A,B	; Define macro setc
                           1418 A'B:	  .byte	0x04		; 04
                           1419 	  .word	A'B		;s00r00
                           1420 	.endm
                           1421 
   0000                    1422 	.org	0
                           1423 	setc	J, K
   0000 04                 1418 JK:	  .byte	0x04		; 04
   0001s00r00              1419 	  .word	JK		;s00r00
                           1424 
                           1425 	.mdelete	.setc
                           1426 
                           1427 
                           1428 	; Macro definition with the
                           1429 	; name 'setd' and three regular
                           1430 	; arguments with concatenation.
                           1431 	;
                           1432 	.macro setd	A,B,C	; Define macro setd
                           1433 A'B:	  .byte	0x05		; 05
                           1434 	  .word	A'B		;s00r00
                           1435 A'C:	  .byte	0x06		; 06
                           1436 	  .word	A'C		;s00r03
                           1437 B'C:	  .byte	0x07		; 07
                           1438 	  .word	B'C		;s00r06
                           1439 A''B''C:  .byte	0x08		; 08
                           1440 	  .word	A''B''C		;s00r09
                           1441 	.endm
                           1442 
   0000                    1443 	.org	0
                           1444 	setd	X, Y, Z
   0000 05                 1433 XY:	  .byte	0x05		; 05
   0001s00r00              1434 	  .word	XY		;s00r00
   0003 06                 1435 XZ:	  .byte	0x06		; 06
   0004s00r03              1436 	  .word	XZ		;s00r03
   0006 07                 1437 YZ:	  .byte	0x07		; 07
   0007s00r06              1438 	  .word	YZ		;s00r06
   0009 08                 1439 XYZ:  .byte	0x08		; 08
   000As00r09              1440 	  .word	XYZ		;s00r09
                           1445 
                           1446 	.mdelete	.setd
                           1447 
                           1448 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 42
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Creation

                           1450 	; Macro definition with the
                           1451 	; name 'sete' and two regular
                           1452 	; arguments.  The second
                           1453 	; argument is converted to
                           1454 	; a numerical value.
                           1455 	.macro	sete	A,B	; Define macro sete
                           1456 	 ...A = A
                           1457 	 ...B = B
                           1458 	 .byte	A,B
                           1459 	 A = A + 1
                           1460 	.endm
                           1461 
                     0000  1462 	qxd = 0
                           1463 	sete	qxd, \(qxd+1)
                     0000  1456 	 ...A = qxd
                     0001  1457 	 ...B = 1
   000C 00 01              1458 	 .byte	qxd,1
                     0001  1459 	 qxd = qxd + 1
                           1464 	.iif	ne,...A-0	.error	1	; ...A != 0
                           1465 	.iif	ne,...B-1	.error	1	; ...B != 1
                           1466 	sete	qxd, \(qxd+2)
                     0001  1456 	 ...A = qxd
                     0003  1457 	 ...B = 3
   000E 01 03              1458 	 .byte	qxd,3
                     0002  1459 	 qxd = qxd + 1
                           1467 	.iif	ne,...A-1	.error	1	; ...A != 1
                           1468 	.iif	ne,...B-3	.error	1	; ...B != 3
                           1469 	sete	qxd, \(qxd+3)
                     0002  1456 	 ...A = qxd
                     0005  1457 	 ...B = 5
   0010 02 05              1458 	 .byte	qxd,5
                     0003  1459 	 qxd = qxd + 1
                           1470 	.iif	ne,...A-2	.error	1	; ...A != 2
                           1471 	.iif	ne,...B-5	.error	1	; ...B != 5
                           1472 
                           1473 	.mdelete	.sete
                           1474 
                           1475 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 43
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Creation

                           1477 	; Macro definition with
                           1478 	; conditional exits.
                           1479 	.macro	cond	A,B,C	; Define macro cond
                           1480 	...A = 0
                           1481 	.if	nb,^!A!
                           1482 	  .if	nb,^!B!
                           1483 	    .if	nb,^!C!
                           1484 	      ...A = 3
                           1485 	      .mexit	; C
                           1486 	    .endif
                           1487 	    ...A = 2
                           1488 	    .mexit	; B
                           1489 	  .endif
                           1490 	  ...A = 1
                           1491 	  .mexit	; A
                           1492 	.endif
                           1493 	.endm
                           1494 
                           1495 	cond
                     0000  1480 	...A = 0
                     0000  1481 	.if	nb,^!!
                           1482 	  .if	nb,^!!
                           1483 	    .if	nb,^!!
                           1484 	      ...A = 3
                           1485 	      .mexit	; C
                           1486 	    .endif
                           1487 	    ...A = 2
                           1488 	    .mexit	; B
                           1489 	  .endif
                           1490 	  ...A = 1
                           1491 	  .mexit	; A
                           1492 	.endif
                           1496 	.iif	ne,...A-0	.error	1	; ...A != 0
                           1497 	cond	1
                     0000  1480 	...A = 0
                     0001  1481 	.if	nb,^!1!
                     0000  1482 	  .if	nb,^!!
                           1483 	    .if	nb,^!!
                           1484 	      ...A = 3
                           1485 	      .mexit	; C
                           1486 	    .endif
                           1487 	    ...A = 2
                           1488 	    .mexit	; B
                           1489 	  .endif
                     0001  1490 	  ...A = 1
                           1491 	  .mexit	; A
                           1498 	.iif	ne,...A-1	.error	1	; ...A != 1
                           1499 	cond	1,2
                     0000  1480 	...A = 0
                     0001  1481 	.if	nb,^!1!
                     0001  1482 	  .if	nb,^!2!
                     0000  1483 	    .if	nb,^!!
                           1484 	      ...A = 3
                           1485 	      .mexit	; C
                           1486 	    .endif
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 44
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Creation

                     0002  1487 	    ...A = 2
                           1488 	    .mexit	; B
                           1500 	.iif	ne,...A-2	.error	1	; ...A != 2
                           1501 	cond	1,2,3
                     0000  1480 	...A = 0
                     0001  1481 	.if	nb,^!1!
                     0001  1482 	  .if	nb,^!2!
                     0001  1483 	    .if	nb,^!3!
                     0003  1484 	      ...A = 3
                           1485 	      .mexit	; C
                           1502 	.iif	ne,...A-3	.error	1	; ...A != 3
                           1503 
                           1504 	.mdelete	cond
                           1505 
                           1506 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 45
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Repeat Macro

                           1508 	.sbttl	Repeat Macro
                           1509 	; Repeat Macro Definition.
                           1510 
                           1511 	.macro	RMD	J,K
                           1512 	 .byte	...cnt	J'K
                           1513 	.endm
                           1514 
                     0000  1515 	...cnt = 0
                           1516 	.rept	0d5
                           1517 	 RMD	^!; 0!,\...cnt
                           1518 	 ...cnt = ...cnt + 1
                           1519 	.endm
                           1517 	 RMD	^!; 0!,\...cnt
   0012 00                 1512 	 .byte	...cnt	; 00
                     0001  1518 	 ...cnt = ...cnt + 1
                           1517 	 RMD	^!; 0!,\...cnt
   0013 01                 1512 	 .byte	...cnt	; 01
                     0002  1518 	 ...cnt = ...cnt + 1
                           1517 	 RMD	^!; 0!,\...cnt
   0014 02                 1512 	 .byte	...cnt	; 02
                     0003  1518 	 ...cnt = ...cnt + 1
                           1517 	 RMD	^!; 0!,\...cnt
   0015 03                 1512 	 .byte	...cnt	; 03
                     0004  1518 	 ...cnt = ...cnt + 1
                           1517 	 RMD	^!; 0!,\...cnt
   0016 04                 1512 	 .byte	...cnt	; 04
                     0005  1518 	 ...cnt = ...cnt + 1
                           1520 	.iif	ne,...cnt - 5	.error	1	; ...cnt != 5
                           1521 
                           1522 
                     0000  1523 	...cnt = 0
                           1524 	.rept	0d10
                           1525 	 RMD	^!; 0!,\...cnt
                           1526 	 ...cnt = ...cnt + 1
                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1528 	 .iif	gt,...cnt - 5	.error	1	; ...cnt >  5
                           1529 	.endm
                           1525 	 RMD	^!; 0!,\...cnt
   0017 00                 1512 	 .byte	...cnt	; 00
                     0001  1526 	 ...cnt = ...cnt + 1
                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1528 	 .iif	gt,...cnt - 5	.error	1	; ...cnt >  5
                           1525 	 RMD	^!; 0!,\...cnt
   0018 01                 1512 	 .byte	...cnt	; 01
                     0002  1526 	 ...cnt = ...cnt + 1
                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1528 	 .iif	gt,...cnt - 5	.error	1	; ...cnt >  5
                           1525 	 RMD	^!; 0!,\...cnt
   0019 02                 1512 	 .byte	...cnt	; 02
                     0003  1526 	 ...cnt = ...cnt + 1
                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1528 	 .iif	gt,...cnt - 5	.error	1	; ...cnt >  5
                           1525 	 RMD	^!; 0!,\...cnt
   001A 03                 1512 	 .byte	...cnt	; 03
                     0004  1526 	 ...cnt = ...cnt + 1
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 46
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Repeat Macro

                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1528 	 .iif	gt,...cnt - 5	.error	1	; ...cnt >  5
                           1525 	 RMD	^!; 0!,\...cnt
   001B 04                 1512 	 .byte	...cnt	; 04
                     0005  1526 	 ...cnt = ...cnt + 1
                           1527 	 .iif	eq,...cnt - 5	.mexit
                           1530 	.iif	ne,...cnt - 5	.error	1	; ...cnt != 5
                           1531 
                           1532 	.mdelete	RMD
                           1533 
                           1534 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 47
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Indefinite Repeat Macro

                           1536 	.sbttl	Indefinite Repeat Macro
                           1537 
                     000C  1538 	...val = 0d12
                           1539 	.irp	sym	A,B,\...val
                           1540 	 .globl	val'sym
                           1541 	 .word	val'sym		;s00r00
                           1542 	.endm
                           1540 	 .globl	valA
   001Cs00r00              1541 	 .word	valA		;s00r00
                           1540 	 .globl	valB
   001Es00r00              1541 	 .word	valB		;s00r00
                           1540 	 .globl	valC
   0020s00r00              1541 	 .word	valC		;s00r00
                           1543 
                           1544 
                           1545 	.irp	sym	^!.word	0x1234		; 12 34!,	^!.byte	0xFF		; FF!
                           1546 	 sym
                           1547 	.endm
   0022 12 34              1546 	 .word	0x1234		; 12 34
   0024 FF                 1546 	 .byte	0xFF		; FF
                           1548 
                           1549 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 48
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Indefinite Repeat on Character

                           1551 	.sbttl	Indefinite Repeat on Character
                           1552 	;
                           1553 	; Note that these macros are used to create
                           1554 	; comments.  The comment delimiter ';' always
                           1555 	; terminates the macro substitution scan when
                           1556 	; found in a macro call.
                           1557 	;(even if the ';' is within a delimited string !!!)
                           1558 	;
                           1559 	; The ';' character is thus placed in the last
                           1560 	; argument of the macro call.
                           1561 	;
                           1562 
                           1563 	.macro	irpcm1	I	J,K,L,M
                           1564 	 .byte	''I,''I - '0	M'J'K'L
                           1565 	.endm
                           1566 
                           1567 	.macro	irpcm2	I	J,K
                           1568 	 .asciz	"'I"			K'J' 00
                           1569 	.endm
                           1570 
                           1571 	.irpc	sym	0123456789abcdef
                           1572 	 ...sym = ''sym
                           1573 	 .if	ge,''sym - '0
                           1574 	  .if	le,''sym - '9
                           1575 	   irpcm1	sym	\''sym, ^! 0!, \(''sym-'0), ^!; !
                           1576 	  .else
                           1577 	   irpcm2	sym	\''sym, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                           1580 	.endm
                     0030  1572 	 ...sym = '0
                     0001  1573 	 .if	ge,'0 - '0
                     0001  1574 	  .if	le,'0 - '9
                           1575 	   irpcm1	0	\'0, ^! 0!, \('0-'0), ^!; !
   0025 30 00              1564 	 .byte	'0,'0 - '0	; 30 00
                     0000  1576 	  .else
                           1577 	   irpcm2	0	\'0, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0031  1572 	 ...sym = '1
                     0001  1573 	 .if	ge,'1 - '0
                     0001  1574 	  .if	le,'1 - '9
                           1575 	   irpcm1	1	\'1, ^! 0!, \('1-'0), ^!; !
   0027 31 01              1564 	 .byte	'1,'1 - '0	; 31 01
                     0000  1576 	  .else
                           1577 	   irpcm2	1	\'1, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0032  1572 	 ...sym = '2
                     0001  1573 	 .if	ge,'2 - '0
                     0001  1574 	  .if	le,'2 - '9
                           1575 	   irpcm1	2	\'2, ^! 0!, \('2-'0), ^!; !
   0029 32 02              1564 	 .byte	'2,'2 - '0	; 32 02
                     0000  1576 	  .else
                           1577 	   irpcm2	2	\'2, ^!; !
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 49
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Indefinite Repeat on Character

                           1578 	  .endif
                           1579 	 .endif
                     0033  1572 	 ...sym = '3
                     0001  1573 	 .if	ge,'3 - '0
                     0001  1574 	  .if	le,'3 - '9
                           1575 	   irpcm1	3	\'3, ^! 0!, \('3-'0), ^!; !
   002B 33 03              1564 	 .byte	'3,'3 - '0	; 33 03
                     0000  1576 	  .else
                           1577 	   irpcm2	3	\'3, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0034  1572 	 ...sym = '4
                     0001  1573 	 .if	ge,'4 - '0
                     0001  1574 	  .if	le,'4 - '9
                           1575 	   irpcm1	4	\'4, ^! 0!, \('4-'0), ^!; !
   002D 34 04              1564 	 .byte	'4,'4 - '0	; 34 04
                     0000  1576 	  .else
                           1577 	   irpcm2	4	\'4, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0035  1572 	 ...sym = '5
                     0001  1573 	 .if	ge,'5 - '0
                     0001  1574 	  .if	le,'5 - '9
                           1575 	   irpcm1	5	\'5, ^! 0!, \('5-'0), ^!; !
   002F 35 05              1564 	 .byte	'5,'5 - '0	; 35 05
                     0000  1576 	  .else
                           1577 	   irpcm2	5	\'5, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0036  1572 	 ...sym = '6
                     0001  1573 	 .if	ge,'6 - '0
                     0001  1574 	  .if	le,'6 - '9
                           1575 	   irpcm1	6	\'6, ^! 0!, \('6-'0), ^!; !
   0031 36 06              1564 	 .byte	'6,'6 - '0	; 36 06
                     0000  1576 	  .else
                           1577 	   irpcm2	6	\'6, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0037  1572 	 ...sym = '7
                     0001  1573 	 .if	ge,'7 - '0
                     0001  1574 	  .if	le,'7 - '9
                           1575 	   irpcm1	7	\'7, ^! 0!, \('7-'0), ^!; !
   0033 37 07              1564 	 .byte	'7,'7 - '0	; 37 07
                     0000  1576 	  .else
                           1577 	   irpcm2	7	\'7, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0038  1572 	 ...sym = '8
                     0001  1573 	 .if	ge,'8 - '0
                     0001  1574 	  .if	le,'8 - '9
                           1575 	   irpcm1	8	\'8, ^! 0!, \('8-'0), ^!; !
   0035 38 08              1564 	 .byte	'8,'8 - '0	; 38 08
                     0000  1576 	  .else
                           1577 	   irpcm2	8	\'8, ^!; !
                           1578 	  .endif
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 50
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Indefinite Repeat on Character

                           1579 	 .endif
                     0039  1572 	 ...sym = '9
                     0001  1573 	 .if	ge,'9 - '0
                     0001  1574 	  .if	le,'9 - '9
                           1575 	   irpcm1	9	\'9, ^! 0!, \('9-'0), ^!; !
   0037 39 09              1564 	 .byte	'9,'9 - '0	; 39 09
                     0000  1576 	  .else
                           1577 	   irpcm2	9	\'9, ^!; !
                           1578 	  .endif
                           1579 	 .endif
                     0061  1572 	 ...sym = 'a
                     0001  1573 	 .if	ge,'a - '0
                     0000  1574 	  .if	le,'a - '9
                           1575 	   irpcm1	a	\'a, ^! 0!, \('a-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	a	\'a, ^!; !
   0039 61 00              1568 	 .asciz	"a"			; 61 00
                           1578 	  .endif
                           1579 	 .endif
                     0062  1572 	 ...sym = 'b
                     0001  1573 	 .if	ge,'b - '0
                     0000  1574 	  .if	le,'b - '9
                           1575 	   irpcm1	b	\'b, ^! 0!, \('b-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	b	\'b, ^!; !
   003B 62 00              1568 	 .asciz	"b"			; 62 00
                           1578 	  .endif
                           1579 	 .endif
                     0063  1572 	 ...sym = 'c
                     0001  1573 	 .if	ge,'c - '0
                     0000  1574 	  .if	le,'c - '9
                           1575 	   irpcm1	c	\'c, ^! 0!, \('c-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	c	\'c, ^!; !
   003D 63 00              1568 	 .asciz	"c"			; 63 00
                           1578 	  .endif
                           1579 	 .endif
                     0064  1572 	 ...sym = 'd
                     0001  1573 	 .if	ge,'d - '0
                     0000  1574 	  .if	le,'d - '9
                           1575 	   irpcm1	d	\'d, ^! 0!, \('d-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	d	\'d, ^!; !
   003F 64 00              1568 	 .asciz	"d"			; 64 00
                           1578 	  .endif
                           1579 	 .endif
                     0065  1572 	 ...sym = 'e
                     0001  1573 	 .if	ge,'e - '0
                     0000  1574 	  .if	le,'e - '9
                           1575 	   irpcm1	e	\'e, ^! 0!, \('e-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	e	\'e, ^!; !
   0041 65 00              1568 	 .asciz	"e"			; 65 00
                           1578 	  .endif
                           1579 	 .endif
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 51
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Indefinite Repeat on Character

                     0066  1572 	 ...sym = 'f
                     0001  1573 	 .if	ge,'f - '0
                     0000  1574 	  .if	le,'f - '9
                           1575 	   irpcm1	f	\'f, ^! 0!, \('f-'0), ^!; !
                     0001  1576 	  .else
                           1577 	   irpcm2	f	\'f, ^!; !
   0043 66 00              1568 	 .asciz	"f"			; 66 00
                           1578 	  .endif
                           1579 	 .endif
                           1581 
                           1582 	.mdelete	irpcm1, irpcm2
                           1583 
                           1584 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 52
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Macro Definitions and User Labels

                           1586 	.sbttl	Macro Definitions and User Labels
                           1587 
                           1588 	.macro	DUL	A	B,C
                           1589 	 .byte	A	C'B
                           1590 	.endm
                           1591 
                           1592 	.macro	LESS	I,J	; Define macro LESS
                           1593 	  .iif	lt,(I - J)	DUL	I	\I, ^!; 0!
                           1594 	  .iif	gt,(I - J)	DUL	J	\J, ^!; 0!
                           1595 	  .iif	eq,(I - J)	DUL	0	\0, ^!; 0!
                           1596 	.endm
                           1597 
                     0001  1598 	sym1	=	1
                     0002  1599 	sym2	=	2
                           1600 
   0000                    1601 	.org	0
                           1602 				;LESS is defined as a label
   0000 02                 1603 LESS:	.byte	2	        ; 02
                           1604 	  ;
                           1605 	  ;
                           1606 	  ;			;LESS is considered to be a label
   0001s00r00              1607 	.word	LESS		;s00r00
                           1608 	  ;
                           1609 	  ;
                           1610 	  ;
                           1611 	LESS	sym1,sym2	;LESS is a macro call
                           1593 	  .iif	lt,(sym1 - sym2)	DUL	sym1	\sym1, ^!; 0!
   0003 01                 1589 	 .byte	sym1	; 01
                           1594 	  .iif	gt,(sym1 - sym2)	DUL	sym2	\sym2, ^!; 0!
                           1595 	  .iif	eq,(sym1 - sym2)	DUL	0	\0, ^!; 0!
                           1612 
                           1613 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 53
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Immediate Conditional Macro Execution

                           1615 	.sbttl	Immediate Conditional Macro Execution
                           1616 
                     0000  1617 	.if	ne,0
                           1618 	  .byte	0xE0
                           1619 	  .iif    f	LESS	sym1,sym2
                           1593 	  .iif	lt,(sym1 - sym2)	DUL	sym1	\sym1, ^!; 0!
   0004 01                 1589 	 .byte	sym1	; 01
                           1594 	  .iif	gt,(sym1 - sym2)	DUL	sym2	\sym2, ^!; 0!
                           1595 	  .iif	eq,(sym1 - sym2)	DUL	0	\0, ^!; 0!
                           1620 	  .byte 0xE1
                           1621 	  .iif	  t	LESS	sym2,sym1
                           1622 	  .byte	0xE2
                           1623 	  .iif    tf	LESS	sym1,sym1
                           1593 	  .iif	lt,(sym1 - sym1)	DUL	sym1	\sym1, ^!; 0!
                           1594 	  .iif	gt,(sym1 - sym1)	DUL	sym1	\sym1, ^!; 0!
                           1595 	  .iif	eq,(sym1 - sym1)	DUL	0	\0, ^!; 0!
   0005 00                 1589 	 .byte	0	; 00
                           1624 	  .byte	0xE3
                           1625 	.endif
                           1626 
                     0001  1627 	.if	eq,0
   0006 F0                 1628 	  .byte	0xF0
                           1629 	  .iif	  f	LESS	sym1,sym2
   0007 F1                 1630 	  .byte	0xF1
                           1631 	  .iif    t	LESS	sym2,sym1
                           1593 	  .iif	lt,(sym2 - sym1)	DUL	sym2	\sym2, ^!; 0!
                           1594 	  .iif	gt,(sym2 - sym1)	DUL	sym1	\sym1, ^!; 0!
   0008 01                 1589 	 .byte	sym1	; 01
                           1595 	  .iif	eq,(sym2 - sym1)	DUL	0	\0, ^!; 0!
   0009 F2                 1632 	  .byte 0xF2
                           1633 	  .iif    tf	LESS	sym2,sym2
                           1593 	  .iif	lt,(sym2 - sym2)	DUL	sym2	\sym2, ^!; 0!
                           1594 	  .iif	gt,(sym2 - sym2)	DUL	sym2	\sym2, ^!; 0!
                           1595 	  .iif	eq,(sym2 - sym2)	DUL	0	\0, ^!; 0!
   000A 00                 1589 	 .byte	0	; 00
   000B F3                 1634 	  .byte	0xF3
                           1635 	.endif
                           1636 
                           1637 	.mdelete	DUL, LESS
                           1638 
                           1639 
                           1640 	.sbttl	Assembler Symbol Table Output
                           1641 
                     0000  1642 .if 0
                           1643 
                           1644  Listing of Symbol Table
                           1645 
                           1646        assembled by:
                           1647                 asxxxx -gloxff out hilo.asm a16bit.asm asmt2blo.asm
                           1648 
                           1649 Symbol Table
                           1650 
                           1651     ...A           =   0003 G   |     ...B           =   0005 G
                           1652     ...cnt         =   0005 G   |     ...sym         =   0066 G
                           1653     ...val         =   000C G   |     .__.$$$.       =   2711 L
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 54
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Assembler Symbol Table Output

                           1654     .__.ABS.       =   0000 G   |     .__.CPU.       =   0000 L
                           1655     .__.H$L.       =   0001 L   |     AreaB              **** GX
                           1656   3 JK                 0000 GR  |   3 K                  0000 GR
                           1657   3 LESS               0000 GR  |     OVR                **** GX
                           1658   3 XY                 0000 GR  |   3 XYZ                0009 GR
                           1659   3 XZ                 0003 GR  |   3 YZ                 0006 GR
                           1660   2 a00                0000 GR  |     a10                **** GX
                           1661     a20                **** GX  |   3 abcdabcd           004A GR
                           1662   1 bndry_1            0000 GR  |   1 bndry_2            0000 GR
                           1663   1 bndry_3            0000 GR  |   1 bndry_4            0000 GR
                           1664   1 bndry_5            0000 GR  |   1 bndry_6            0000 GR
                           1665     cnstnt0        =   ABCD G   |     cnstnt1        =   1234 G
                           1666     cnstnt2        =   5678 G   |   1 code0              007E GR
                           1667     extern             **** GX  |   1 lclsym0            0000 GR
                           1668   1 lclsym1            003C GR  |     m              =   0000 G
                           1669     n              =   0001 G   |     n0x00          =   0000 G
                           1670     n0x01          =   0001 G   |     n0x10          =   0010 G
                           1671     n0xeeff        =   EEFF G   |     n0xff          =   00FF G
                           1672     ofsbyte        =   0014 G   |     ofsword        =   000A G
                           1673     qxd            =   0003 G   |     sym1           =   0001 G
                           1674     sym2           =   0002 G   |     valA               **** GX
                           1675     valB               **** GX  |     valC               **** GX
                           1676   1 word               0090 GR
                           1677 
                           1678 
                           1679 Area Table
                           1680 
                           1681 [_CSEG]
                           1682    0 _CODE            size    0   flags C080
                           1683 [_DSEG]
                           1684    1 _DATA            size   82   flags CDCC
                           1685    2 AreaA            size   24   flags C5C4
                           1686    3 AreaB            size    C   flags CDCC
                           1687 
                           1688 .endif
                           1689 
                           1690 
ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 55
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Symbol Table

    ...A           =   0003 G   |     ...B           =   0005 G
    ...cnt         =   0005 G   |     ...sym         =   0066 G
    ...val         =   000C G   |     .__.$$$.       =   2711 L
    .__.ABS.       =   0000 G   |     .__.CPU.       =   0000 L
    .__.H$L.       =   0001 L   |     AreaB              **** GX
  9 JK                 0000 GR  |   9 K                  0000 GR
  9 LESS               0000 GR  |     OVR                **** GX
  9 XY                 0000 GR  |   9 XYZ                0009 GR
  9 XZ                 0003 GR  |   9 YZ                 0006 GR
  8 a00                0000 GR  |     a10                **** GX
    a20                **** GX  |   9 abcdabcd           004A GR
  2 bndry_1            0000 GR  |   3 bndry_2            0000 GR
  4 bndry_3            0000 GR  |   5 bndry_4            0000 GR
  6 bndry_5            0000 GR  |   7 bndry_6            0000 GR
    cnstnt0        =   ABCD G   |     cnstnt1        =   1234 G
    cnstnt2        =   5678 G   |   1 code0              007E GR
    extern             **** GX  |   1 lclsym0            0000 GR
  1 lclsym1            003C GR  |     m              =   0000 G
    n              =   0001 G   |     n0x00          =   0000 G
    n0x01          =   0001 G   |     n0x10          =   0010 G
    n0xeeff        =   EEFF G   |     n0xff          =   00FF G
    ofsbyte        =   0014 G   |     ofsword        =   000A G
    qxd            =   0003 G   |     sym1           =   0001 G
    sym2           =   0002 G   |     valA               **** GX
    valB               **** GX  |     valC               **** GX
  1 word               0090 GR

ASxxxx Assembler V05.50  (ASxxxx Test Assembler)                       Page 56
Hexadecimal [16-Bits]                                 Sun Aug 27 19:25:09 2023
Machine Independent Assembler Test
Area Table

[_CSEG]
   0 _CODE            size    0   flags C080
   2 bndry_1          size   12   flags 4D4C
   3 bndry_2          size    2   flags 4D4C
   4 bndry_3          size  402   flags 4D4C
   5 bndry_4          size    2   flags 4D4C
   6 bndry_5          size   23   flags 4D4C
   7 bndry_6          size  602   flags 4D4C
[_DSEG]
   1 _DATA            size   82   flags CDCC
   8 AreaA            size   24   flags C5C4
   9 AreaB            size    C   flags CDCC

